<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.member.mapper.MemberMapper">

	<!-- 아이디찾기-->
	<select id="findID" parameterType="kr.or.ddit.member.domain.FindIDVO" resultType="String">
	select member_id from MEMBER where member_email = #{member_email} and MEMBER_USERNAME=#{member_username}
	</select>
	<select id="findPW" parameterType="kr.or.ddit.member.domain.FindPWVO" resultType="String">
	select MEMBER_PASSWORD from MEMBER where member_email =#{userEmail} and MEMBER_USERNAME=#{userName} and Member_id = #{userID}
	</select>
	
	
    <!-- 비밀번호 변경-->
    <update id="modifyPW" parameterType="kr.or.ddit.member.domain.MemberVO" >
        update member
        set 
            member_password = #{member_password ,jdbcType=VARCHAR}
        where member_id = #{member_id,jdbcType=VARCHAR}
    </update>
	
	
    <!-- 	회원가입 -->
    <insert id="insertMember" parameterType="kr.or.ddit.member.domain.MemberVO">
        INSERT INTO member(MEMBER_ID, MEMBER_PASSWORD, MEMBER_EMAIL, MEMBER_USERNAME)
        VALUES (#{member_id}, #{member_password}, #{member_email}, #{member_username})
    </insert>

    <!-- 	회원정보 수정 완벽한거 아님 -->
    <update id="modifyMember">
        update member
        set member_id       = #{member_id ,jdbcType=VARCHAR},
            member_password = #{member_password ,jdbcType=VARCHAR},
            member_email    = #{member_email,jdbcType=VARCHAR},
            member_username = #{member_username,jdbcType=VARCHAR}
        where member_id = #{member_id,jdbcType=VARCHAR}
    </update>

    <!-- 	아이디중복검사 -->
    <select id="idCheck" resultType="Integer">
        select count(*)
        from member
        where member_id = #{member_id}
    </select>

    <!-- 	이메일중복검사 -->
    <select id="checkmail" resultType="Integer">
        select count(*)
        from member
        where member_email = #{member_email}
    </select>

    <!-- 로그인체크 -->
    <select id="loginCheck" resultType="kr.or.ddit.member.domain.MemberVO"
            parameterType="kr.or.ddit.member.domain.MemberVO">
        select *
        from MEMBER
        where MEMBER_ID = #{member_id}
          and MEMBER_PASSWORD = #{member_password}
    </select>

    <!-- 소셜로그인	-->
    <insert id="insertSocialMember" parameterType="kr.or.ddit.member.domain.MemberVO">
        merge into MEMBER
        using DUAL
        on (MEMBER_ID = #{member_id})
        when matched then
            update
            set MEMBER_USERNAME = #{member_username},
                MEMBER_THUMNAIL = #{member_thumnail}
            where MEMBER_ID = #{member_id}
        when not matched then
            insert (member_id, member_password, member_username)
            values (#{member_id}, #{member_password}, #{member_username})
    </insert>

    <select id="selectMember" resultType="kr.or.ddit.member.domain.MemberVO">
        select *
        from MEMBER
        where MEMBER_ID = #{member_id}
    </select>
</mapper>