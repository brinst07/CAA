<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.caa.mapper.CAAMapper">
	<select id="getCscodeList" resultType="kr.or.ddit.caa.domain.CscodeVO">
		select *
		from cs_code
		where cs_code_depth = #{cs_code_depth}
	</select>

	<select id="otherCscodeList" resultType="kr.or.ddit.caa.domain.CscodeVO">
		select *
		from cs_code
		where cs_code2 = #{keyword}
		
	</select>
	
	<select id="getCircleSubway" parameterType="hashMap" resultType="kr.or.ddit.caa.domain.SubwayPopVO">
select SUBWAY_YEAR year,
       SUBWAY_MONTH month,
       SUBWAY_STATION_ID staion_id,


       SUM(SUBWAY_RIDE) ride,
       SUM(SUBWAY_QUIT) quit

from SUBWAY_PASSENGER
where SUBSTR(to_char(SUBWAY_DATE), 1, 6) >= to_char(add_months(sysdate, -12), 'yyyymm')
  and SUBWAY_STATION_ID in (
    select SUBWAY_STATION_ID
    from (
             select SUBWAY_STATION_ID,
                    SUBWAY_STATION_NAME,
                    SUBWAY_STATION_LATITUDE,
                    SUBWAY_STATION_LONGITUDE,
                    SQRT(
                                    (SUBWAY_STATION_LATITUDE - #{LatitudeCenter}) *
                                    (SUBWAY_STATION_LATITUDE - #{LatitudeCenter}) +
                                    (SUBWAY_STATION_LONGITUDE - #{LongitudeCenter}) *
                                    (SUBWAY_STATION_LONGITUDE - #{LongitudeCenter})
                        ) radius
             from SUBWAY_STATION
         ) a
         <![CDATA[
    where a.radius < (SQRT(
                                      (#{LatitudeEndBoundary} - #{LatitudeStartBoundary}) *
                                      (#{LatitudeEndBoundary} - #{LatitudeStartBoundary}) +
                                      (#{LongitudeEndBoundary} - #{LongitudeStartBoundary}) *
                                      (#{LongitudeEndBoundary} - #{LongitudeStartBoundary})
                          ) / (2 * SQRT(2))) * 1
                          ]]>
)
group by SUBWAY_YEAR,
         SUBWAY_MONTH,
         SUBWAY_STATION_ID
order by SUBWAY_YEAR,
         SUBWAY_MONTH
	</select>

	<select id="getStoreList" resultType="kr.or.ddit.caa.domain.StoreVO">
		select STORE_YEAR,STORE_BUNGI,STORE_SER_CODE_NAME,sum(STORE_SM_COUNT) as STORE_SM_COUNT
		from store
		where 
		<foreach collection="store_cs_code_name" item="sector" index="index" open="(" close=") and" separator="or">
			STORE_CS_CODE_NAME = #{sector}
		</foreach>
		
		<foreach collection="storeList" item="item" index="index" open="(" close=")" separator="or" >
			STORE_SER_CODE_NAME LIKE '%'||#{item.middle}||'%'
		</foreach>
		group by STORE_YEAR, STORE_BUNGI,STORE_SER_CODE_NAME
		order by store_year desc, STORE_BUNGI asc
	</select>

	<select id="getSectorCode" resultType="string">
		select cs_code
		from cs_code
		where cs_code_name = #{cs_code_name}
	</select>
	
	
<!-- 	동적 쿼리, 파라미터  수정해야함-->
	<select id="SalesByIndustryList" resultType="kr.or.ddit.caa.domain.SalesByIndustryVO">
select * from SALES_TEMP where SALES_SER_NAME like '%한식음식점%' and SALES_BD_NAME like '%고분다리골목시장%' and SALES_YEAR ='2019'
	</select>
	
</mapper>